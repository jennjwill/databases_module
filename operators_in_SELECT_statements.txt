1. Write out a generic SELECT statement.

SELECT genericColumn FROM genericTable WHERE somethingGeneric;


2. Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.

Selena is FROM WHERE?
Selena was From Texas
SELECT FROM WHERE


3. Given this dogs table, write queries to select the following pieces of data:

Intake teams typically guess the breed of shelter dogs, so the breed column may have multiple words (for example, "Labrador Collie mix").

*Display the name, gender, and age of all dogs that are part Labrador.  

SELECT name, gender, age
FROM dogs 
WHERE breed LIKE '%labrador%';


*Display the ids of all dogs that are under 1 year old.

SELECT id
FROM dogs
WHERE age < 1;


*Display the name and age of all dogs that are female and over 35lbs.

SELECT name, age
FROM dogs
WHERE gender='F'
AND weight > 35;


*Display all of the information about all dogs that are not Shepherd mixes.

SELECT *
FROM dogs
WHERE breed NOT LIKE '%shepard%';


*Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.

SELECT id, age, weight, breed
FROM dogs
WHERE weight > 60
OR breed = 'great dane';


4. Given this cats table, what records are returned from these queries?

*SELECT name, adoption_date FROM cats;

name        adoption_date
--------------------------
Mushi       2016-03-22
Seashell    NULL
Azul        2016-04-17
Victoire    2016-09-01
Nala        NULL 


*SELECT name, age FROM cats;


name        age
--------------------
Mushi       1
Seashell    7
Azul        3
Victoire    7
Nala        1


5. From the cats table, write queries to select the following pieces of data.
*Display all the information about all of the available cats.

SELECT *
FROM cats;

*Display the name and sex of all cats who are 7 years old.

SELECT name, gender
FROM cats
WHERE age = 7;

*Find all of the names of the cats, so you don’t choose duplicate names for new cats.

SELECT name
FROM cats;

6. List each comparison operator and explain when you would use it. Include a real world example for each. If you can’t list these from memory, do these flashcards until you can!


These are all used in/along with the WHERE selector in SQL:
<  WHERE a query is less than a number  5 < 10
>  WHERE a query is more than a number  5 > 1
<= less than or equal to                5 <=10
>= greater than or equal to             5 >=1
!= not equal to/does not equal          5 != 10
= equal/is                              5=5
<> not equal to/is greater than or less than     5<>1

LIKE '%x' a string contains x at the end of the string          LIKE '%n'      Jenn
LIKE 'x%' a string contains x at the beginning of the string    LIKE 'J%'      Jenn
LIKE '%x%' a string contains x anywhere in the string           LIKE '%en%'    Jenn

AND selecting for something and something else    WHERE mountains=true AND landscape=desert   selects Arizona
OR  selecting for something or another thing      WHERE mountains=true OR landscape=desert    selects North Carolina
NOT used as in NOT LIKE to select items that are NOT LIKE or don't contain a thing    NOT LIKE stateBorder=continuous selects Hawaii & Alaska


7. From the cats table, what data is returned from these queries?
*SELECT name FROM cats WHERE gender = ‘F’;

name
-------
Seashell
Nala


*SELECT name FROM cats WHERE age <> 3;

name
---------
Mushi
Seashell
Victoire
Nala


*SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;

id
-------
3
4